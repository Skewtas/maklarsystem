'use client'

import { useState, useEffect, useRef, type ChangeEvent } from 'react'
import { useRouter } from 'next/navigation'
import DashboardLayout from '@/components/layout/DashboardLayout'
import { ArrowLeft, Save, MapPin, Home, DollarSign, Users, FileText, Camera, Building } from 'lucide-react'
import Link from 'next/link'
import { useCreateObjekt } from '@/lib/api/objekt'
import { useKontakter } from '@/lib/api/kontakter'
import { toast } from 'sonner'

// Modern Glass Card Component - same as home page
const GlassCard = ({ children, className = "", hover = true, ...props }: { 
  children: React.ReactNode
  className?: string
  hover?: boolean
  [key: string]: any
}) => (
  <div 
    className={`backdrop-blur-xl bg-white/20 rounded-3xl border border-white/30 shadow-xl transition-all duration-300 ${hover ? 'hover:bg-white/30 hover:shadow-2xl hover:scale-[1.02]' : ''} ${className}`}
    {...props}
  >
    {children}
  </div>
)

// Glassmorphism Input Component
const GlassInput = ({ 
  type = "text", 
  value, 
  onChange, 
  placeholder, 
  className = "",
  ...props 
}: any) => (
  <input
    type={type}
    value={value}
    onChange={onChange}
    placeholder={placeholder}
    className={`w-full px-4 py-4 backdrop-blur-xl bg-white/20 border border-white/30 rounded-2xl text-gray-800 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 ${className}`}
    {...props}
  />
)

// Glassmorphism Select Component
const GlassSelect = ({ 
  value, 
  onChange, 
  children, 
  className = "",
  ...props 
}: any) => (
  <select
    value={value}
    onChange={onChange}
    className={`w-full px-4 py-4 backdrop-blur-xl bg-white/20 border border-white/30 rounded-2xl text-gray-800 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 ${className}`}
    {...props}
  >
    {children}
  </select>
)

// Glassmorphism Textarea Component
const GlassTextarea = ({ 
  value, 
  onChange, 
  rows = 3, 
  placeholder, 
  className = "",
  ...props 
}: any) => (
  <textarea
    value={value}
    onChange={onChange}
    rows={rows}
    placeholder={placeholder}
    className={`w-full px-4 py-4 backdrop-blur-xl bg-white/20 border border-white/30 rounded-2xl text-gray-800 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 resize-none ${className}`}
    {...props}
  />
)

// Floating Background Elements - same as home page
const FloatingElements = () => (
  <div className="absolute inset-0 overflow-hidden pointer-events-none">
    <div className="absolute top-20 left-20 w-40 h-40 bg-gradient-to-br from-blue-200/20 to-purple-200/20 rounded-full blur-2xl animate-pulse"></div>
    <div className="absolute top-60 right-40 w-56 h-56 bg-gradient-to-br from-green-200/20 to-blue-200/20 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '1s' }}></div>
    <div className="absolute bottom-40 left-1/4 w-32 h-32 bg-gradient-to-br from-yellow-200/20 to-orange-200/20 rounded-full blur-xl animate-pulse" style={{ animationDelay: '2s' }}></div>
    <div className="absolute bottom-60 right-1/4 w-72 h-72 bg-gradient-to-br from-purple-200/20 to-pink-200/20 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '0.5s' }}></div>
    <div className="absolute bottom-1/4 right-1/4 w-20 h-20 bg-gradient-to-br from-purple-300/20 to-pink-300/20 rounded-full blur-xl animate-bounce" style={{ animationDelay: '1.5s', animationDuration: '5s' }}></div>
  </div>
)

// Sticky Sidebar Navigation Component
const StickyNavigation = ({ activeSection, onSectionClick }: { activeSection: string; onSectionClick: (section: string) => void }) => {
  const sections = [
    { id: 'grundinformation', label: 'GRUNDINFORMATION', icon: '📋' },
    { id: 'karta', label: 'KARTA', icon: '🗺️' },
    { id: 'interior', label: 'INTERIÖR', icon: '🏠' },
    { id: 'beskrivningar', label: 'BESKRIVNINGAR', icon: '📝' },
    { id: 'byggnad', label: 'BYGGNAD', icon: '🏗️' },
    { id: 'tv-bredband', label: 'TV & BREDBAND', icon: '📺' },
    { id: 'ventilation', label: 'VENTILATION', icon: '💨' },
    { id: 'energideklaration', label: 'ENERGIDEKLARATION', icon: '⚡' },
    { id: 'balkong-uteplats', label: 'BALKONG & UTEPLATS', icon: '🌿' },
    { id: 'avgifter', label: 'AVGIFTER & INSATS', icon: '💰' },
    { id: 'vaning-hiss', label: 'VÅNING & HISS', icon: '🏢' },
    { id: 'driftkostnader', label: 'DRIFTKOSTNADER', icon: '🔧' },
    { id: 'personer', label: 'PERSONER I HUSHÅLLET', icon: '👥' },
    { id: 'omgivning', label: 'OMGIVNING', icon: '🌍' }
  ]

  return (
    <div className="w-72 flex-shrink-0">
      <div className="sticky top-24 w-72 h-[calc(100vh-8rem)] overflow-y-auto z-20">
        <GlassCard className="p-4 h-full">
          <h3 className="text-lg font-bold text-gray-800 mb-4">
            Navigering
          </h3>
          <div className="space-y-2 overflow-y-auto h-[calc(100%-4rem)]">
            {sections.map((section) => (
              <button
                key={section.id}
                onClick={() => onSectionClick(section.id)}
                className={`w-full flex items-center space-x-3 px-4 py-3 rounded-2xl transition-all duration-300 text-left ${
                  activeSection === section.id
                    ? 'bg-white/40 text-gray-800 shadow-md'
                    : 'hover:bg-white/30 text-gray-600 hover:text-gray-800'
                }`}
              >
                <span className="text-xl filter drop-shadow-sm">{section.icon}</span>
                <span className="text-sm font-semibold">{section.label}</span>
              </button>
            ))}
          </div>
        </GlassCard>
      </div>
    </div>
  )
}

export default function NyttObjektPage() {
  const router = useRouter()
  const createObjekt = useCreateObjekt()
  const { data: kontakter = [] } = useKontakter()
  const [activeSection, setActiveSection] = useState('grundinformation')
  
  // Section refs for smooth scrolling
  const sectionRefs = useRef<{[key: string]: HTMLElement | null}>({})
  
  const [formData, setFormData] = useState({
    // Grundinformation
    sokbegrepp: '',
    typ: 'lagenhet' as 'villa' | 'lagenhet' | 'radhus' | 'fritidshus' | 'tomt',
    upplatelse_form: 'bostadsratt' as 'bostadsratt' | 'agt' | 'hyresratt' | 'arrende',
    nyproduktion: false,
    adress: '',
    postnummer: '',
    ort: '',
    kommun: 'Stockholm',
    omrade: '',
    fastighetsbeteckning: '',
    lagenhetsnummer_forening: '',
    lagenhetsnummer_register: '',
    portkod: '',
    nyckelnummer: '',
    arkivnummer: '',
    ovrigt_grundinfo: '',
    utokade_sokbegrepp: '',
    
    // Karta
    karta_typ: 'karta' as 'karta' | 'satellit',
    karta_leverantor: 'eniro' as 'eniro' | 'google' | 'hitta',
    latitude: '',
    longitude: '',
    
    // Interiör
    boarea: '',
    biarea: '',
    byggnadsyta: '',
    antal_rum: '',
    antal_sovrum: '',
    kokstyp: '',
    areakalla: '',
    kommentar_areakalla: '',
    allmant_interior: '',
    rumsbeskrivningar: [] as Array<{namn: string, beskrivning: string}>,
    
    // Beskrivningar
    saljfras: '',
    saljrubrik: '',
    kort_beskrivning: '',
    lang_beskrivning: '',
    vagbeskrivning: '',
    allmant_lagenhet: '',
    ovrigt_beskrivning: '',
    
    // Byggnad
    byggnadstyp: '',
    byggar: '',
    byggar_kommentar: '',
    fonster: '',
    uppvarmning: '',
    renoveringar: '',
    ovrigt_byggnad: '',
    ovriga_byggnader: '',
    
    // TV och Bredband
    tv_bredband: '',
    
    // Ventilation
    ventilation_typ: '',
    ventilation_besiktning: '',
    
    // Energideklaration
    energideklaration_utford: false,
    energideklaration_datum: '',
    energiprestanda_primär: '',
    energiforbrukning_atemp: '',
    energiklass: '' as '' | 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G',
    
    // Balkong, uteplats och bilplats
    mark_utrymmen_kvm: '',
    typ_mark_utrymmen: '',
    balkong: false,
    uteplats: false,
    bilplats: false,
    beskrivning_uteplats: '',
    beskrivning_bilplats: '',
    
    // Andelstal, avgifter och insats
    andel_forening_procent: '',
    andel_arsavgift_procent: '',
    kommentar_andelstal: '',
    manadsavgift: '',
    kommentar_manadsavgift: '',
    nettoskuldsattning: '',
    kommentar_nettoskuldsattning: '',
    reparationsfond: '',
    insats: '',
    upplatelseavgift: '',
    
    // Våning/hiss
    vaning: '',
    antal_vaningar: '',
    beskrivning_vaningsplan: '',
    hiss: false,
    beskrivning_hiss: '',
    
    // Driftkostnader
    uppvarmning_kostnad: '',
    el_kostnad: '',
    va_kostnad: '',
    sotning_kostnad: '',
    vag_samfallighet: '',
    renhallning_kostnad: '',
    forsakring_kostnad: '',
    underhall_kostnad: '',
    ovrigt_kostnad: '',
    
    // Personer i hushållet
    personer_kommentar: '',
    natbolag: '',
    elleverantor: '',
    elforbrukning_kwh: '',
    
    // Omgivning
    omradenamn_marknadsforing: '',
    allmant_omrade: '',
    kommunikation: '',
    narservice: '',
    parkering_omgivning: '',
    ovrigt_omgivning: ''
  })

  // Handle smooth scrolling to sections
  const handleSectionClick = (sectionId: string) => {
    setActiveSection(sectionId)
    const element = sectionRefs.current[sectionId]
    if (element) {
      element.scrollIntoView({ 
        behavior: 'smooth',
        block: 'start'
      })
    }
  }

  // Track active section while scrolling
  useEffect(() => {
    const handleScroll = () => {
      const sections = Object.keys(sectionRefs.current)
      const scrollPosition = window.scrollY + 200

      for (const sectionId of sections) {
        const element = sectionRefs.current[sectionId]
        if (element) {
          const { offsetTop, offsetHeight } = element
          if (scrollPosition >= offsetTop && scrollPosition < offsetTop + offsetHeight) {
            setActiveSection(sectionId)
            break
          }
        }
      }
    }

    window.addEventListener('scroll', handleScroll)
    return () => window.removeEventListener('scroll', handleScroll)
  }, [])

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    toast.success('Objekt sparades framgångsrikt!')
    // Implementation of save logic here
  }

  const addRumsbeskrivning = () => {
    setFormData(prev => ({
      ...prev,
      rumsbeskrivningar: [...prev.rumsbeskrivningar, { namn: '', beskrivning: '' }]
    }))
  }

  const updateRumsbeskrivning = (index: number, field: 'namn' | 'beskrivning', value: string) => {
    setFormData(prev => ({
      ...prev,
      rumsbeskrivningar: prev.rumsbeskrivningar.map((rum, i) => 
        i === index ? { ...rum, [field]: value } : rum
      )
    }))
  }

  const removeRumsbeskrivning = (index: number) => {
    setFormData(prev => ({
      ...prev,
      rumsbeskrivningar: prev.rumsbeskrivningar.filter((_, i) => i !== index)
    }))
  }

  return (
    <DashboardLayout>
      <div className="flex-1 bg-gradient-to-br from-blue-100 via-purple-50 to-green-100 relative overflow-hidden">
        <FloatingElements />
        
        <div className="relative z-10">
          {/* Enhanced Header */}
          <GlassCard className="p-6 mb-6">
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-4">
                <Link href="/objekt" className="p-3 hover:bg-white/30 rounded-xl transition-all duration-300">
                  <ArrowLeft className="w-5 h-5 text-gray-700" />
                </Link>
                <div>
                  <h1 className="text-3xl font-light text-gray-800">
                    Nytt Objekt
                  </h1>
                  <p className="text-gray-700 font-medium">Skapa en ny fastighetslisting med glassmorphism-design</p>
                </div>
              </div>
              <button
                onClick={handleSubmit}
                className="flex items-center justify-center space-x-2 bg-gradient-to-r from-blue-500 to-purple-600 text-white px-6 py-4 rounded-2xl font-medium hover:from-blue-600 hover:to-purple-700 transition-all duration-300 shadow-lg hover:shadow-xl"
              >
                <Save className="w-5 h-5" />
                <span className="font-semibold">Spara Objekt</span>
              </button>
            </div>
          </GlassCard>

          <div className="flex gap-6">
            <StickyNavigation activeSection={activeSection} onSectionClick={handleSectionClick} />
            
            {/* Main Content */}
            <div className="flex-1 space-y-8">
              <form onSubmit={handleSubmit} className="space-y-8">
                
                {/* Grundinformation */}
                <section ref={el => { sectionRefs.current['grundinformation'] = el; }}>
                  <GlassCard className="p-6">
                    <h2 className="text-xl font-bold text-gray-800 mb-6 flex items-center">
                      <Home className="w-6 h-6 mr-3 text-blue-600 filter drop-shadow-sm" />
                      Grundinformation
                    </h2>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                      <div>
                        <label className="block text-sm font-semibold text-gray-800 mb-2">Sökbegrepp</label>
                        <GlassInput
                          type="text"
                          value={formData.sokbegrepp}
                          onChange={(e: ChangeEvent<HTMLInputElement>) => setFormData(prev => ({...prev, sokbegrepp: e.target.value}))}
                          placeholder="Lägenhet"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-semibold text-gray-800 mb-2">Upplåtelseform</label>
                        <GlassSelect
                          value={formData.upplatelse_form}
                          onChange={(e: ChangeEvent<HTMLSelectElement>) => setFormData(prev => ({...prev, upplatelse_form: e.target.value as any}))}
                        >
                          <option value="bostadsratt">Bostadsrätt</option>
                          <option value="agt">Ägt</option>
                          <option value="hyresratt">Hyresrätt</option>
                          <option value="arrende">Arrende</option>
                        </GlassSelect>
                      </div>

                      <div className="flex items-center">
                        <input
                          type="checkbox"
                          id="nyproduktion"
                          checked={formData.nyproduktion}
                          onChange={(e) => setFormData(prev => ({...prev, nyproduktion: e.target.checked}))}
                          className="rounded border-gray-300 mr-2"
                        />
                        <label htmlFor="nyproduktion" className="text-sm font-medium text-gray-700">Nyproduktion</label>
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Gatuadress</label>
                        <input
                          type="text"
                          value={formData.adress}
                          onChange={(e) => setFormData(prev => ({...prev, adress: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Postnummer</label>
                        <input
                          type="text"
                          value={formData.postnummer}
                          onChange={(e) => setFormData(prev => ({...prev, postnummer: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Ort</label>
                        <input
                          type="text"
                          value={formData.ort}
                          onChange={(e) => setFormData(prev => ({...prev, ort: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Kommun</label>
                        <input
                          type="text"
                          value={formData.kommun}
                          onChange={(e) => setFormData(prev => ({...prev, kommun: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          placeholder="Stockholm"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Område</label>
                        <input
                          type="text"
                          value={formData.omrade}
                          onChange={(e) => setFormData(prev => ({...prev, omrade: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Fastighetsbeteckning <span className="text-xs text-gray-500">(0 av 100)</span></label>
                        <input
                          type="text"
                          value={formData.fastighetsbeteckning}
                          onChange={(e) => setFormData(prev => ({...prev, fastighetsbeteckning: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={100}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Lägenhetsnummer förening <span className="text-xs text-gray-500">(0 av 40)</span></label>
                        <input
                          type="text"
                          value={formData.lagenhetsnummer_forening}
                          onChange={(e) => setFormData(prev => ({...prev, lagenhetsnummer_forening: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={40}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Lägenhetsnummer register</label>
                        <input
                          type="text"
                          value={formData.lagenhetsnummer_register}
                          onChange={(e) => setFormData(prev => ({...prev, lagenhetsnummer_register: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Portkod <span className="text-xs text-gray-500">(0 av 10)</span></label>
                        <input
                          type="text"
                          value={formData.portkod}
                          onChange={(e) => setFormData(prev => ({...prev, portkod: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={10}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Nyckelnummer <span className="text-xs text-gray-500">(0 av 20)</span></label>
                        <input
                          type="text"
                          value={formData.nyckelnummer}
                          onChange={(e) => setFormData(prev => ({...prev, nyckelnummer: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={20}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Arkivnummer <span className="text-xs text-gray-500">(0 av 20)</span></label>
                        <input
                          type="text"
                          value={formData.arkivnummer}
                          onChange={(e) => setFormData(prev => ({...prev, arkivnummer: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={20}
                        />
                      </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Övrigt</label>
                        <textarea
                          value={formData.ovrigt_grundinfo}
                          onChange={(e) => setFormData(prev => ({...prev, ovrigt_grundinfo: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Utökade sökbegrepp</label>
                        <textarea
                          value={formData.utokade_sokbegrepp}
                          onChange={(e) => setFormData(prev => ({...prev, utokade_sokbegrepp: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                        />
                      </div>
                    </div>
                  </GlassCard>
                </section>

                {/* Karta */}
                <section ref={el => { sectionRefs.current['karta'] = el; }}>
                  <GlassCard className="p-6">
                    <h2 className="text-xl font-bold text-gray-800 mb-6 flex items-center">
                      <MapPin className="w-6 h-6 mr-3 text-green-600 filter drop-shadow-sm" />
                      Karta
                    </h2>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Karttyp</label>
                        <div className="flex space-x-4">
                          <label className="flex items-center">
                            <input
                              type="radio"
                              name="karta_typ"
                              value="karta"
                              checked={formData.karta_typ === 'karta'}
                              onChange={(e) => setFormData(prev => ({...prev, karta_typ: e.target.value as any}))}
                              className="mr-2"
                            />
                            Karta
                          </label>
                          <label className="flex items-center">
                            <input
                              type="radio"
                              name="karta_typ"
                              value="satellit"
                              checked={formData.karta_typ === 'satellit'}
                              onChange={(e) => setFormData(prev => ({...prev, karta_typ: e.target.value as any}))}
                              className="mr-2"
                            />
                            Satellit
                          </label>
                        </div>
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Leverantör</label>
                        <select
                          value={formData.karta_leverantor}
                          onChange={(e) => setFormData(prev => ({...prev, karta_leverantor: e.target.value as any}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        >
                          <option value="eniro">Eniro</option>
                          <option value="google">Google</option>
                          <option value="hitta">Hitta</option>
                        </select>
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Latitud</label>
                        <input
                          type="text"
                          value={formData.latitude}
                          onChange={(e) => setFormData(prev => ({...prev, latitude: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Longitud</label>
                        <input
                          type="text"
                          value={formData.longitude}
                          onChange={(e) => setFormData(prev => ({...prev, longitude: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>
                    </div>
                  </GlassCard>
                </section>

                {/* Interiör */}
                <section ref={el => { sectionRefs.current['interior'] = el; }}>
                  <GlassCard className="p-6">
                    <h2 className="text-xl font-semibold text-gray-800 mb-6 flex items-center">
                      <Home className="w-6 h-6 mr-3 text-blue-600" />
                      Interiör
                    </h2>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Boarea (kvm)</label>
                        <input
                          type="number"
                          value={formData.boarea}
                          onChange={(e) => setFormData(prev => ({...prev, boarea: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Biarea (kvm)</label>
                        <input
                          type="number"
                          value={formData.biarea}
                          onChange={(e) => setFormData(prev => ({...prev, biarea: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Byggnadsyta (kvm)</label>
                        <input
                          type="number"
                          value={formData.byggnadsyta}
                          onChange={(e) => setFormData(prev => ({...prev, byggnadsyta: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Antal rum</label>
                        <input
                          type="number"
                          value={formData.antal_rum}
                          onChange={(e) => setFormData(prev => ({...prev, antal_rum: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Varav sovrum</label>
                        <input
                          type="number"
                          value={formData.antal_sovrum}
                          onChange={(e) => setFormData(prev => ({...prev, antal_sovrum: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Kökstyp <span className="text-xs text-gray-500">(0 av 15)</span></label>
                        <input
                          type="text"
                          value={formData.kokstyp}
                          onChange={(e) => setFormData(prev => ({...prev, kokstyp: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={15}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Areakälla <span className="text-xs text-gray-500">(0 av 100)</span></label>
                        <input
                          type="text"
                          value={formData.areakalla}
                          onChange={(e) => setFormData(prev => ({...prev, areakalla: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={100}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Kommentar till areakälla <span className="text-xs text-gray-500">(0 av 100)</span></label>
                        <input
                          type="text"
                          value={formData.kommentar_areakalla}
                          onChange={(e) => setFormData(prev => ({...prev, kommentar_areakalla: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={100}
                        />
                      </div>
                    </div>

                    <div className="mt-6">
                      <label className="block text-sm font-medium text-gray-700 mb-2">Allmän beskrivning av interiören</label>
                      <textarea
                        value={formData.allmant_interior}
                        onChange={(e) => setFormData(prev => ({...prev, allmant_interior: e.target.value}))}
                        className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        rows={4}
                      />
                    </div>

                    {/* Rumsbeskrivningar */}
                    <div className="mt-6">
                      <div className="flex items-center justify-between mb-4">
                        <h3 className="text-lg font-medium text-gray-800">Rumsbeskrivningar</h3>
                        <button
                          type="button"
                          onClick={addRumsbeskrivning}
                          className="backdrop-blur-xl bg-white/30 border border-white/40 text-gray-700 px-6 py-3 rounded-2xl font-medium hover:bg-white/40 transition-all duration-300"
                        >
                          Lägg till rum
                        </button>
                      </div>
                      
                      {formData.rumsbeskrivningar.map((rum, index) => (
                        <div key={index} className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4 p-4 bg-white/10 rounded-lg">
                          <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">Namn på rum</label>
                            <input
                              type="text"
                              value={rum.namn}
                              onChange={(e) => updateRumsbeskrivning(index, 'namn', e.target.value)}
                              className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                            />
                          </div>
                          <div className="flex items-end">
                            <div className="flex-1 mr-2">
                              <label className="block text-sm font-medium text-gray-700 mb-2">Beskrivning</label>
                              <input
                                type="text"
                                value={rum.beskrivning}
                                onChange={(e) => updateRumsbeskrivning(index, 'beskrivning', e.target.value)}
                                className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                              />
                            </div>
                            <button
                              type="button"
                              onClick={() => removeRumsbeskrivning(index)}
                              className="px-3 py-3 backdrop-blur-xl bg-red-500/20 border border-red-300/40 text-red-600 rounded-xl hover:bg-red-500/30 transition-all duration-300 font-medium"
                            >
                              Ta bort
                            </button>
                          </div>
                        </div>
                      ))}
                    </div>
                  </GlassCard>
                </section>

                {/* Beskrivningar */}
                <section ref={el => { sectionRefs.current['beskrivningar'] = el; }}>
                  <GlassCard className="p-6">
                    <h2 className="text-xl font-semibold text-gray-800 mb-6 flex items-center">
                      <FileText className="w-6 h-6 mr-3 text-blue-600" />
                      Beskrivningar
                    </h2>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Säljfras <span className="text-xs text-gray-500">(0 av 20)</span></label>
                        <input
                          type="text"
                          value={formData.saljfras}
                          onChange={(e) => setFormData(prev => ({...prev, saljfras: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={20}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Säljrubrik <span className="text-xs text-gray-500">(0 av 100)</span></label>
                        <input
                          type="text"
                          value={formData.saljrubrik}
                          onChange={(e) => setFormData(prev => ({...prev, saljrubrik: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={100}
                        />
                      </div>
                    </div>

                    <div className="space-y-6 mt-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Kort säljande beskrivning</label>
                        <textarea
                          value={formData.kort_beskrivning}
                          onChange={(e) => setFormData(prev => ({...prev, kort_beskrivning: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Lång säljande beskrivning</label>
                        <textarea
                          value={formData.lang_beskrivning}
                          onChange={(e) => setFormData(prev => ({...prev, lang_beskrivning: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={5}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Vägbeskrivning</label>
                        <textarea
                          value={formData.vagbeskrivning}
                          onChange={(e) => setFormData(prev => ({...prev, vagbeskrivning: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Allmänt om lägenheten</label>
                        <textarea
                          value={formData.allmant_lagenhet}
                          onChange={(e) => setFormData(prev => ({...prev, allmant_lagenhet: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={4}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Övrigt</label>
                        <textarea
                          value={formData.ovrigt_beskrivning}
                          onChange={(e) => setFormData(prev => ({...prev, ovrigt_beskrivning: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                        />
                      </div>
                    </div>
                  </GlassCard>
                </section>

                {/* Byggnad */}
                <section ref={el => { sectionRefs.current['byggnad'] = el; }}>
                  <GlassCard className="p-6">
                    <h2 className="text-xl font-semibold text-gray-800 mb-6 flex items-center">
                      <Building className="w-6 h-6 mr-3 text-blue-600" />
                      Byggnad
                    </h2>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Byggnadstyp <span className="text-xs text-gray-500">(0 av 60)</span></label>
                        <input
                          type="text"
                          value={formData.byggnadstyp}
                          onChange={(e) => setFormData(prev => ({...prev, byggnadstyp: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={60}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Byggår <span className="text-xs text-gray-500">(0 av 30)</span></label>
                        <input
                          type="text"
                          value={formData.byggar}
                          onChange={(e) => setFormData(prev => ({...prev, byggar: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={30}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Byggår kommentar <span className="text-xs text-gray-500">(0 av 40)</span></label>
                        <input
                          type="text"
                          value={formData.byggar_kommentar}
                          onChange={(e) => setFormData(prev => ({...prev, byggar_kommentar: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={40}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Fönster <span className="text-xs text-gray-500">(0 av 50)</span></label>
                        <input
                          type="text"
                          value={formData.fonster}
                          onChange={(e) => setFormData(prev => ({...prev, fonster: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={50}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Uppvärmning <span className="text-xs text-gray-500">(0 av 80)</span></label>
                        <input
                          type="text"
                          value={formData.uppvarmning}
                          onChange={(e) => setFormData(prev => ({...prev, uppvarmning: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={80}
                        />
                      </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Renoveringar</label>
                        <textarea
                          value={formData.renoveringar}
                          onChange={(e) => setFormData(prev => ({...prev, renoveringar: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Övrigt</label>
                        <textarea
                          value={formData.ovrigt_byggnad}
                          onChange={(e) => setFormData(prev => ({...prev, ovrigt_byggnad: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                        />
                      </div>

                      <div className="md:col-span-2">
                        <label className="block text-sm font-medium text-gray-700 mb-2">Övriga byggnader/utrymmen</label>
                        <textarea
                          value={formData.ovriga_byggnader}
                          onChange={(e) => setFormData(prev => ({...prev, ovriga_byggnader: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                        />
                      </div>
                    </div>
                  </GlassCard>
                </section>

                {/* TV och Bredband */}
                <section ref={el => { sectionRefs.current['tv-bredband'] = el; }}>
                  <GlassCard className="p-6">
                    <h2 className="text-xl font-semibold text-gray-800 mb-6 flex items-center">
                      <span className="text-2xl mr-3">📺</span>
                      TV och Bredband
                    </h2>
                    
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">TV & BREDBAND</label>
                      <textarea
                        value={formData.tv_bredband}
                        onChange={(e) => setFormData(prev => ({...prev, tv_bredband: e.target.value}))}
                        className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        rows={4}
                      />
                    </div>
                  </GlassCard>
                </section>

                {/* Ventilation */}
                <section ref={el => { sectionRefs.current['ventilation'] = el; }}>
                  <GlassCard className="p-6">
                    <h2 className="text-xl font-semibold text-gray-800 mb-6 flex items-center">
                      <span className="text-2xl mr-3">💨</span>
                      Ventilation
                    </h2>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Typ <span className="text-xs text-gray-500">(0 av 100)</span></label>
                        <input
                          type="text"
                          value={formData.ventilation_typ}
                          onChange={(e) => setFormData(prev => ({...prev, ventilation_typ: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={100}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Besiktning <span className="text-xs text-gray-500">(0 av 30)</span></label>
                        <input
                          type="text"
                          value={formData.ventilation_besiktning}
                          onChange={(e) => setFormData(prev => ({...prev, ventilation_besiktning: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={30}
                        />
                      </div>
                    </div>
                  </GlassCard>
                </section>

                {/* Energideklaration */}
                <section ref={el => { sectionRefs.current['energideklaration'] = el; }}>
                  <GlassCard className="p-6">
                    <h2 className="text-xl font-semibold text-gray-800 mb-6 flex items-center">
                      <span className="text-2xl mr-3">⚡</span>
                      Energideklaration
                    </h2>
                    
                    <div className="space-y-6">
                      <div className="flex items-center">
                        <input
                          type="checkbox"
                          id="energideklaration_utford"
                          checked={formData.energideklaration_utford}
                          onChange={(e) => setFormData(prev => ({...prev, energideklaration_utford: e.target.checked}))}
                          className="rounded border-gray-300 mr-2"
                        />
                        <label htmlFor="energideklaration_utford" className="text-sm font-medium text-gray-700">Energideklaration utförd</label>
                      </div>

                      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                        <div>
                          <label className="block text-sm font-medium text-gray-700 mb-2">Energideklarationsdatum</label>
                          <input
                            type="date"
                            value={formData.energideklaration_datum}
                            onChange={(e) => setFormData(prev => ({...prev, energideklaration_datum: e.target.value}))}
                            className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          />
                        </div>

                        <div>
                          <label className="block text-sm font-medium text-gray-700 mb-2">Energiprestanda primärenergital (kWh/kvm och år)</label>
                          <input
                            type="number"
                            value={formData.energiprestanda_primär}
                            onChange={(e) => setFormData(prev => ({...prev, energiprestanda_primär: e.target.value}))}
                            className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          />
                        </div>

                        <div>
                          <label className="block text-sm font-medium text-gray-700 mb-2">Energiförbrukning Atemp (kWh/kvm och år)</label>
                          <input
                            type="number"
                            value={formData.energiforbrukning_atemp}
                            onChange={(e) => setFormData(prev => ({...prev, energiforbrukning_atemp: e.target.value}))}
                            className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          />
                        </div>

                        <div>
                          <label className="block text-sm font-medium text-gray-700 mb-2">Energiklass</label>
                          <select
                            value={formData.energiklass}
                            onChange={(e) => setFormData(prev => ({...prev, energiklass: e.target.value as any}))}
                            className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          >
                            <option value="">Ingen</option>
                            <option value="A">A</option>
                            <option value="B">B</option>
                            <option value="C">C</option>
                            <option value="D">D</option>
                            <option value="E">E</option>
                            <option value="F">F</option>
                            <option value="G">G</option>
                          </select>
                        </div>
                      </div>
                    </div>
                  </GlassCard>
                </section>

                {/* Balkong, uteplats och bilplats */}
                <section ref={el => { sectionRefs.current['balkong-uteplats'] = el; }}>
                  <GlassCard className="p-6">
                    <h2 className="text-xl font-semibold text-gray-800 mb-6 flex items-center">
                      <span className="text-2xl mr-3">🌿</span>
                      Balkong, uteplats och bilplats
                    </h2>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Mark och utrymmen som ingår i upplåtelsen (kvm)</label>
                        <input
                          type="number"
                          value={formData.mark_utrymmen_kvm}
                          onChange={(e) => setFormData(prev => ({...prev, mark_utrymmen_kvm: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Typ av mark och utrymmen <span className="text-xs text-gray-500">(0 av 30)</span></label>
                        <input
                          type="text"
                          value={formData.typ_mark_utrymmen}
                          onChange={(e) => setFormData(prev => ({...prev, typ_mark_utrymmen: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={30}
                        />
                      </div>

                      <div className="flex flex-col space-y-3">
                        <div className="flex items-center">
                          <input
                            type="checkbox"
                            id="balkong"
                            checked={formData.balkong}
                            onChange={(e) => setFormData(prev => ({...prev, balkong: e.target.checked}))}
                            className="rounded border-gray-300 mr-2"
                          />
                          <label htmlFor="balkong" className="text-sm font-medium text-gray-700">Balkong</label>
                        </div>

                        <div className="flex items-center">
                          <input
                            type="checkbox"
                            id="uteplats"
                            checked={formData.uteplats}
                            onChange={(e) => setFormData(prev => ({...prev, uteplats: e.target.checked}))}
                            className="rounded border-gray-300 mr-2"
                          />
                          <label htmlFor="uteplats" className="text-sm font-medium text-gray-700">Uteplats</label>
                        </div>

                        <div className="flex items-center">
                          <input
                            type="checkbox"
                            id="bilplats"
                            checked={formData.bilplats}
                            onChange={(e) => setFormData(prev => ({...prev, bilplats: e.target.checked}))}
                            className="rounded border-gray-300 mr-2"
                          />
                          <label htmlFor="bilplats" className="text-sm font-medium text-gray-700">Bilplats</label>
                        </div>
                      </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Beskrivning uteplats</label>
                        <textarea
                          value={formData.beskrivning_uteplats}
                          onChange={(e) => setFormData(prev => ({...prev, beskrivning_uteplats: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Beskrivning bilplats</label>
                        <textarea
                          value={formData.beskrivning_bilplats}
                          onChange={(e) => setFormData(prev => ({...prev, beskrivning_bilplats: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                        />
                      </div>
                    </div>
                  </GlassCard>
                </section>

                {/* Andelstal, avgifter och insats */}
                <section ref={el => { sectionRefs.current['avgifter'] = el; }}>
                  <GlassCard className="p-6">
                    <h2 className="text-xl font-semibold text-gray-800 mb-6 flex items-center">
                      <DollarSign className="w-6 h-6 mr-3 text-blue-600" />
                      Andelstal, avgifter och insats
                    </h2>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Andel i förening (%)</label>
                        <input
                          type="number"
                          step="0.01"
                          value={formData.andel_forening_procent}
                          onChange={(e) => setFormData(prev => ({...prev, andel_forening_procent: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Andel av årsavgift (%)</label>
                        <input
                          type="number"
                          step="0.01"
                          value={formData.andel_arsavgift_procent}
                          onChange={(e) => setFormData(prev => ({...prev, andel_arsavgift_procent: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Månadsavgift (kr)</label>
                        <input
                          type="number"
                          value={formData.manadsavgift}
                          onChange={(e) => setFormData(prev => ({...prev, manadsavgift: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Bostadsrättens indirekta nettoskuldsättning (kr)</label>
                        <input
                          type="number"
                          value={formData.nettoskuldsattning}
                          onChange={(e) => setFormData(prev => ({...prev, nettoskuldsattning: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Reparationsfond (kr)</label>
                        <input
                          type="number"
                          value={formData.reparationsfond}
                          onChange={(e) => setFormData(prev => ({...prev, reparationsfond: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Insats (kr)</label>
                        <input
                          type="number"
                          value={formData.insats}
                          onChange={(e) => setFormData(prev => ({...prev, insats: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Upplåtelseavgift (kr)</label>
                        <input
                          type="number"
                          value={formData.upplatelseavgift}
                          onChange={(e) => setFormData(prev => ({...prev, upplatelseavgift: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Kommentar till andelstal</label>
                        <textarea
                          value={formData.kommentar_andelstal}
                          onChange={(e) => setFormData(prev => ({...prev, kommentar_andelstal: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Kommentar till månadsavgift <span className="text-xs text-gray-500">(0 av 500)</span></label>
                        <textarea
                          value={formData.kommentar_manadsavgift}
                          onChange={(e) => setFormData(prev => ({...prev, kommentar_manadsavgift: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                          maxLength={500}
                        />
                      </div>

                      <div className="md:col-span-2">
                        <label className="block text-sm font-medium text-gray-700 mb-2">Kommentar till nettoskuldsättningen</label>
                        <textarea
                          value={formData.kommentar_nettoskuldsattning}
                          onChange={(e) => setFormData(prev => ({...prev, kommentar_nettoskuldsattning: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                        />
                      </div>
                    </div>
                  </GlassCard>
                </section>

                {/* Våning/hiss */}
                <section ref={el => { sectionRefs.current['vaning-hiss'] = el; }}>
                  <GlassCard className="p-6">
                    <h2 className="text-xl font-semibold text-gray-800 mb-6 flex items-center">
                      <Building className="w-6 h-6 mr-3 text-blue-600" />
                      Våning/hiss
                    </h2>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Våning</label>
                        <input
                          type="number"
                          value={formData.vaning}
                          onChange={(e) => setFormData(prev => ({...prev, vaning: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Antal våningar</label>
                        <input
                          type="number"
                          value={formData.antal_vaningar}
                          onChange={(e) => setFormData(prev => ({...prev, antal_vaningar: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div className="flex items-center">
                        <input
                          type="checkbox"
                          id="hiss"
                          checked={formData.hiss}
                          onChange={(e) => setFormData(prev => ({...prev, hiss: e.target.checked}))}
                          className="rounded border-gray-300 mr-2"
                        />
                        <label htmlFor="hiss" className="text-sm font-medium text-gray-700">Hiss</label>
                      </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Beskrivning av våningsplan</label>
                        <textarea
                          value={formData.beskrivning_vaningsplan}
                          onChange={(e) => setFormData(prev => ({...prev, beskrivning_vaningsplan: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Beskrivning av hiss <span className="text-xs text-gray-500">(0 av 100)</span></label>
                        <textarea
                          value={formData.beskrivning_hiss}
                          onChange={(e) => setFormData(prev => ({...prev, beskrivning_hiss: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                          maxLength={100}
                        />
                      </div>
                    </div>
                  </GlassCard>
                </section>

                {/* Driftkostnader */}
                <section ref={el => { sectionRefs.current['driftkostnader'] = el; }}>
                  <GlassCard className="p-6">
                    <h2 className="text-xl font-semibold text-gray-800 mb-6 flex items-center">
                      <span className="text-2xl mr-3">🔧</span>
                      Driftkostnader
                    </h2>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Uppvärmning (kr/år)</label>
                        <input
                          type="number"
                          value={formData.uppvarmning_kostnad}
                          onChange={(e) => setFormData(prev => ({...prev, uppvarmning_kostnad: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">El (kr/år)</label>
                        <input
                          type="number"
                          value={formData.el_kostnad}
                          onChange={(e) => setFormData(prev => ({...prev, el_kostnad: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">VA (kr/år)</label>
                        <input
                          type="number"
                          value={formData.va_kostnad}
                          onChange={(e) => setFormData(prev => ({...prev, va_kostnad: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Sotning (kr/år)</label>
                        <input
                          type="number"
                          value={formData.sotning_kostnad}
                          onChange={(e) => setFormData(prev => ({...prev, sotning_kostnad: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Väg/samfällighetsavgift (kr/år)</label>
                        <input
                          type="number"
                          value={formData.vag_samfallighet}
                          onChange={(e) => setFormData(prev => ({...prev, vag_samfallighet: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Renhållning (kr/år)</label>
                        <input
                          type="number"
                          value={formData.renhallning_kostnad}
                          onChange={(e) => setFormData(prev => ({...prev, renhallning_kostnad: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Försäkring (kr/år)</label>
                        <input
                          type="number"
                          value={formData.forsakring_kostnad}
                          onChange={(e) => setFormData(prev => ({...prev, forsakring_kostnad: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Underhåll (kr/år)</label>
                        <input
                          type="number"
                          value={formData.underhall_kostnad}
                          onChange={(e) => setFormData(prev => ({...prev, underhall_kostnad: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Övrigt (kr/år)</label>
                        <input
                          type="number"
                          value={formData.ovrigt_kostnad}
                          onChange={(e) => setFormData(prev => ({...prev, ovrigt_kostnad: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>
                    </div>

                    <div className="mt-6 p-4 bg-white/10 rounded-lg">
                      <div className="text-lg font-semibold text-gray-800">
                        Summa: {
                          [
                            formData.uppvarmning_kostnad,
                            formData.el_kostnad,
                            formData.va_kostnad,
                            formData.sotning_kostnad,
                            formData.vag_samfallighet,
                            formData.renhallning_kostnad,
                            formData.forsakring_kostnad,
                            formData.underhall_kostnad,
                            formData.ovrigt_kostnad
                          ]
                            .filter(val => val && !isNaN(Number(val)))
                            .reduce((sum, val) => sum + Number(val), 0)
                            .toLocaleString('sv-SE')
                        } kr/år
                      </div>
                      <div className="text-sm text-gray-600 mt-1">
                        {Math.round([
                          formData.uppvarmning_kostnad,
                          formData.el_kostnad,
                          formData.va_kostnad,
                          formData.sotning_kostnad,
                          formData.vag_samfallighet,
                          formData.renhallning_kostnad,
                          formData.forsakring_kostnad,
                          formData.underhall_kostnad,
                          formData.ovrigt_kostnad
                        ]
                          .filter(val => val && !isNaN(Number(val)))
                          .reduce((sum, val) => sum + Number(val), 0) / 12
                        ).toLocaleString('sv-SE')} kr/mån
                      </div>
                    </div>
                  </GlassCard>
                </section>

                {/* Personer i hushållet */}
                <section ref={el => { sectionRefs.current['personer'] = el; }}>
                  <GlassCard className="p-6">
                    <h2 className="text-xl font-semibold text-gray-800 mb-6 flex items-center">
                      <Users className="w-6 h-6 mr-3 text-blue-600" />
                      Personer i hushållet
                    </h2>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Nätbolag <span className="text-xs text-gray-500">(0 av 50)</span></label>
                        <input
                          type="text"
                          value={formData.natbolag}
                          onChange={(e) => setFormData(prev => ({...prev, natbolag: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={50}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Elleverantör <span className="text-xs text-gray-500">(0 av 50)</span></label>
                        <input
                          type="text"
                          value={formData.elleverantor}
                          onChange={(e) => setFormData(prev => ({...prev, elleverantor: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={50}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Elförbrukning (kWh/år)</label>
                        <input
                          type="number"
                          value={formData.elforbrukning_kwh}
                          onChange={(e) => setFormData(prev => ({...prev, elforbrukning_kwh: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        />
                      </div>
                    </div>

                    <div className="mt-6">
                      <label className="block text-sm font-medium text-gray-700 mb-2">Kommentar</label>
                      <textarea
                        value={formData.personer_kommentar}
                        onChange={(e) => setFormData(prev => ({...prev, personer_kommentar: e.target.value}))}
                        className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                        rows={4}
                      />
                    </div>
                  </GlassCard>
                </section>

                {/* Omgivning */}
                <section ref={el => { sectionRefs.current['omgivning'] = el; }}>
                  <GlassCard className="p-6">
                    <h2 className="text-xl font-semibold text-gray-800 mb-6 flex items-center">
                      <span className="text-2xl mr-3">🌍</span>
                      Omgivning
                    </h2>
                    
                    <div className="space-y-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Namn för området i marknadsföring <span className="text-xs text-gray-500">(0 av 100)</span></label>
                        <input
                          type="text"
                          value={formData.omradenamn_marknadsforing}
                          onChange={(e) => setFormData(prev => ({...prev, omradenamn_marknadsforing: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          maxLength={100}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Allmänt om området</label>
                        <textarea
                          value={formData.allmant_omrade}
                          onChange={(e) => setFormData(prev => ({...prev, allmant_omrade: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={4}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Kommunikation</label>
                        <textarea
                          value={formData.kommunikation}
                          onChange={(e) => setFormData(prev => ({...prev, kommunikation: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Närservice</label>
                        <textarea
                          value={formData.narservice}
                          onChange={(e) => setFormData(prev => ({...prev, narservice: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Parkering</label>
                        <textarea
                          value={formData.parkering_omgivning}
                          onChange={(e) => setFormData(prev => ({...prev, parkering_omgivning: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Övrigt</label>
                        <textarea
                          value={formData.ovrigt_omgivning}
                          onChange={(e) => setFormData(prev => ({...prev, ovrigt_omgivning: e.target.value}))}
                          className="w-full px-4 py-3 rounded-xl border border-white/20 bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:bg-white/20 transition-all"
                          rows={3}
                        />
                      </div>
                    </div>
                  </GlassCard>
                </section>

              </form>
            </div>
          </div>
        </div>
      </div>
    </DashboardLayout>
  )
}