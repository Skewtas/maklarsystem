-- Create NextAuth schema for authentication tables
create schema if not exists next_auth;

-- Users table for NextAuth
create table if not exists next_auth.users (
  id uuid primary key default gen_random_uuid(),
  name text,
  email text unique,
  email_verified timestamp with time zone,
  image text,
  created_at timestamp with time zone default now(),
  updated_at timestamp with time zone default now()
);

-- Accounts table for OAuth/provider accounts
create table if not exists next_auth.accounts (
  id bigint generated by default as identity primary key,
  user_id uuid references next_auth.users(id) on delete cascade,
  type text not null,
  provider text not null,
  provider_account_id text not null,
  refresh_token text,
  access_token text,
  expires_at bigint,
  token_type text,
  scope text,
  id_token text,
  session_state text,
  created_at timestamp with time zone default now(),
  updated_at timestamp with time zone default now(),
  unique (provider, provider_account_id)
);

-- Sessions table for active sessions
create table if not exists next_auth.sessions (
  id uuid primary key default gen_random_uuid(),
  session_token text unique not null,
  user_id uuid references next_auth.users(id) on delete cascade,
  expires timestamp with time zone not null,
  created_at timestamp with time zone default now(),
  updated_at timestamp with time zone default now()
);

-- Verification tokens table for email verification
create table if not exists next_auth.verification_tokens (
  identifier text not null,
  token text not null,
  expires timestamp with time zone not null,
  created_at timestamp with time zone default now(),
  primary key (identifier, token)
);

-- Indexes for performance
create index if not exists idx_next_auth_users_email on next_auth.users(email);
create index if not exists idx_next_auth_accounts_user_id on next_auth.accounts(user_id);
create index if not exists idx_next_auth_sessions_user_id on next_auth.sessions(user_id);
create index if not exists idx_next_auth_sessions_token on next_auth.sessions(session_token);

-- Enable RLS but allow NextAuth service role access
alter table next_auth.users enable row level security;
alter table next_auth.accounts enable row level security;
alter table next_auth.sessions enable row level security;
alter table next_auth.verification_tokens enable row level security;

-- Policies for NextAuth service role (allows full access)
-- Note: These policies assume the service role is used by NextAuth
create policy "NextAuth users access" on next_auth.users for all using (true);
create policy "NextAuth accounts access" on next_auth.accounts for all using (true);
create policy "NextAuth sessions access" on next_auth.sessions for all using (true);
create policy "NextAuth verification_tokens access" on next_auth.verification_tokens for all using (true); 